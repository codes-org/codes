LPGROUPS
{
    MODELNET_GRP
    {
        # How many times should these LP types be replicated?
        # Total number of specific LPs = <Number of specific LPs per repetition> x <Number of repetitions>
        repetitions="338";
        # Number of workload LPs per repetition. If nw-lp == number terminal LPs per repetition, this means that there will be one workload rank per terminal
        nw-lp="9";
        # Number of teriminal LPs per repetition. Total terminal LPs in modelnet_grp must match total terminals configured
        modelnet_slimfly="9";
        # number of router LPs per repetition. Total router LPs in modelnet_grp must match total routers configured
        modelnet_slimfly_router="1";
    }
}
PARAMS
{
#ROSS PDES Parameters
    # Order of mapping the model specific LPs
    modelnet_order=("slimfly", "slimfly_router");
    # ROSS Message size - Based on size of message defined in header file (to be deprecated if possible)
    message_size="736";

#General CODES
    # Size of packets generated
    packet_size="4096";
    # Size of chunks transmitted - to not chunk together packets set chunk_size == packet_size
    chunk_size="4096";
    # Scheduling algorithm for packet scheduling by workload: fcfs, round-robin, priority (will require additional parameters found in model-net-lp.c)
    modelnet_scheduler="fcfs";

#Multi-Rail Parameters - remove all for default Slim Fly behavior:
    # Slim Fly (0) or Multi-Rail Slim Fly: Fit Fly (1) - to be deprecated in favor of just specifying num_rails
    sf_type="0";
    # Number of rails (default 1)
    num_rails="1";
    # Algorithm for selection of which rail traffic should be injected through: none (ignores additional rails), congestion (picks one with least local congestion), path (picks one with shortest path to destination), random (picks rail uniformly at random)
    rail_select="none";
    # Number of injection queues for workload LPs (should equal number of rails)
    num_injection_queues="1";
    # Number of sub-queues per NIC for packet (recommendation undocumented - default 1)
    node_copy_queues="1";

#Topology Specific Parameters (mutually dependent and must be compatible with : 
    # Generator Set X for MMS-2 Slim Fly Graph
    generator_set_X=("1","10","9","12","3","4");
    # Generator Set X' for MMS-2 Slim Fly Graph
    generator_set_X_prime=("6","8","2","7","5","11");
    # Number of routers per Slim Fly group - Dependent on X and X'
    num_routers="13";
    # Number of ports actively dedicated to local router connections per router (intra-group)
    local_channels="6";
    # Number of ports actively dedicated to global router connections per router (inter-group)
    global_channels="13";    

#Easily Configurable Parameters (not dependent on topology, can usually change without breaking)
    # Number of terminals per Slim Fly router
    num_terminals="9";
    # Delay (in ns) added by router to routing packets to simulate processing from input port to output port
    router_delay="90";
    # Size of local router-router VC in bytes
    local_vc_size="65536";
    # Size of global router-router VC in bytes
    global_vc_size="65536";
    # Size of terminal-router VC in bytes
    cn_vc_size="65536";
    # Bandwidth of local router-router links in GiB/s
    local_bandwidth="12.5";
    # Bandwidth of global router-router links in GiB/s
    global_bandwidth="12.5";
    # Bandwidth of terminal-router links in GiB/s
    cn_bandwidth="12.5";
    # Routing algorithm employed: minimal (Shortest Path), nonminimal (Valiant), adaptive (UGAL with local information)
    routing="adaptive";
    # Cost multiplier for scoring of nonminimal links in comparison to minimal with adaptive routing. csf_ratio=2 means nonminimal link congestion is evaluated at 2x the same amount of congestion in a minimal link
    csf_ratio="1";
    # Number of Virtual Channels per port - Not changeable without adapting source code routing
    num_vcs="4";
}
