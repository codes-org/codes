#ifndef CODES_SURROGATE_INIT_H
#define CODES_SURROGATE_INIT_H

/**
 * init.h -- Config/initialization point
 * Elkin Cruz
 *
 * Copyright (c) 2023 Rensselaer Polytechnic Institute
 */
#include "codes/surrogate/packet-latency-predictor/common.h"
#include "codes/surrogate/switch.h"

// A simple macro to clarify code a bit
#define PRINTF_ONCE(...) if (g_tw_mynode == 0) { fprintf(stderr, __VA_ARGS__); }

// Basic level of debugging is 1. It should be always turned on
// because it tells us when a switch to or from surrogate-mode happened.
// It can be deactivated (set to 0) if it ends up being too obnoxious
// Level 0: don't show anything
// Level 1: show when surrogate-mode is activated and deactivated
// Level 2: level 1 and some information at each GVT
// Level 3: level 1 and show extended information at each GVT
#define DEBUG_DIRECTOR 1

#ifdef __cplusplus
extern "C" {
#endif

/**
 * Variable definitions
 */

void print_surrogate_stats(void);

struct surrogate_config {
    struct director_data director;  //!< functionality needed by the director to switch back and forth from model-level surrogate-mode to (vanilla) high-definition simulation
    int total_terminals;  //!< total number of terminals
    size_t n_lp_types;
    struct lp_types_switch lp_types[MAX_LP_TYPES];
};

/** Loads surrogate configuration, including packet latency predictor. */
void surrogate_configure(
        char const * const annotation,
        struct surrogate_config * const config,
        struct packet_latency_predictor ** pl_pred //!< pointer to save packet latency predictor generated by. Caller must free it
);

extern struct surrogate_config surr_config;
extern bool is_surrogate_configured;
extern double surrogate_switching_time;

#ifdef __cplusplus
}
#endif

#endif /* end of include guard */
